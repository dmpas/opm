///////////////////////////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс

Процедура ЗарегистрироватьКоманду(Знач ИмяКоманды, Знач Парсер) Экспорт
	
	ОписаниеКоманды = Парсер.ОписаниеКоманды(ИмяКоманды, "Обновить пакет");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "-all", "Обновить все установленные пакеты");
	Парсер.ДобавитьИменованныйПараметрКоманды(ОписаниеКоманды, "-f", "Указать файл из которого нужно установить пакет");
	Парсер.ДобавитьПозиционныйПараметрКоманды(ОписаниеКоманды, "ИмяПакета", "Имя пакета в хабе. Чтобы установить конкретную версию, используйте ИмяПакета@ВерсияПакета");
	Парсер.ДобавитьПараметрФлагКоманды(ОписаниеКоманды, "-l", "Обновление пакета в локальном каталоге oscript_modules");
	Парсер.ДобавитьКоманду(ОписаниеКоманды);
	
КонецПроцедуры

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие ключей командной строки и их значений
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды) Экспорт
    
	ОбновитьПакет(ПараметрыКоманды);
	Возврат 0;

КонецФункции

Процедура ОбновитьПакет(Знач ЗначенияПараметров) Экспорт
	
	РежимУстановки = РежимУстановкиПакетов.Глобально;

	Если ЗначенияПараметров["-l"] = Истина Тогда
		РежимУстановки = РежимУстановкиПакетов.Локально;
	КонецЕсли;

	Если ЗначенияПараметров["-all"] Тогда
		РаботаСПакетами.ОбновитьУстановленныеПакеты(РежимУстановки);
	ИначеЕсли ЗначенияПараметров["-f"] <> Неопределено Тогда
		РаботаСПакетами.УстановитьПакетИзФайла(ЗначенияПараметров["-f"], РежимУстановки);
	Иначе
		РаботаСПакетами.ОбновитьПакетИзОблака(ЗначенияПараметров["ИмяПакета"], РежимУстановки);
	КонецЕсли;
	
КонецПроцедуры